@model IList<Suma2Lealtad.Models.DetalleOrdenRecargaPrepago>
@{
    ViewBag.Title = "Create";
    Layout = "~/Views/Shared/_Layout.cshtml";
}

@*<link href="css/bootstrap.css" rel="stylesheet">*@
@*<link href="~/Content/bootstrap.css" rel="stylesheet" />*@
@*<link href="css/style.css" rel="stylesheet">*@
@*<link href="~/Content/style.css" rel="stylesheet" />*@

<style type="text/css" media="screen">
    .table-hover {
        cursor: pointer;
    }

    .table tbody tr.active td {
        background-color: #5e8262; /*#476B6B #29A329;*/
        color: white;
    }
</style>


<div class="form-group">

    <div class="panel panel-default">

        <div class="panel-heading clearfix panel-gradient">
            <h3 class="panel-title">Prepago / Órdenes de Recarga / Crear Orden de Recarga</h3>
        </div>

        <div class="panel-body">

            <div class="editor-label col-md-4 control-label">
                <br />
            </div>
            <div class="editor-field col-md-8">
                <br />
            </div>

            <form id="commentForm" method="post" action="@Url.Action("Create", "OrdenRecargaPrepago", new { idCliente = Model.First().idCliente })" class="form-horizontal" onsubmit="return verificarforma();">

                <div class="editor-label col-md-4 control-label">
                    Cliente :
                </div>

                <div class="editor-field col-md-6">
                    @Html.TextBoxFor(model => model.First().nameCliente, new { @class = "form-control", @readonly = "true" })
                </div>

                <div class="editor-label col-md-4 control-label">
                    RIF :
                </div>
                <div class="editor-form col-md-6">
                    @Html.TextBoxFor(model => model.First().rifCliente, new { @class = "form-control", @readonly = "true" })
                </div>
                <div class="editor-label col-md-4 control-label">
                    Teléfono :
                </div>
                <div class="editor-form col-md-6">
                    @Html.TextBoxFor(model => model.First().phoneCliente, new { @class = "form-control", @readonly = "true" })
                </div>

                <div class="editor-label col-md-4 control-label"></div>
                <div class="editor-field col-md-6">
                    <br />
                </div>

                <div class="editor-field col-md-6">
                    <br />
                </div>

                <table id="detalleOrden" class="table table-hover">

                    <thead>
                        <tr>
                            <th>Número de Documento/Cédula</th>
                            <th>Nombre</th>
                            <th>Monto</th>
                            <th>Estatus</th>
                        </tr>
                    </thead>

                    <tbody>

                        @for (int i = 0; i < Model.Count; i++)
                        {     
                            <tr data-row-key="@Model[i].idAfiliado">

                                @Html.HiddenFor(modelItem => Model[i].idAfiliado)
                                @Html.HiddenFor(modelItem => Model[i].idOrden)
                                @Html.HiddenFor(modelItem => Model[i].tipoOrden)

                                @*<td>
                                    @Html.DisplayFor(modelItem => Model[i].type, new { @class = "form-control" })
                                </td>*@

                                <td>
                                    @Html.HiddenFor(modelItem => Model[i].docnumberAfiliado)
                                    @Html.DisplayFor(modelItem => Model[i].docnumberAfiliado, new { @class = "form-control" })
                                </td>

                                <td>
                                    @Html.HiddenFor(modelItem => Model[i].nameAfiliado)
                                    @Html.HiddenFor(modelItem => Model[i].lastname1Afiliado)
                                    @Html.DisplayFor(modelItem => Model[i].nameAfiliado) @Html.DisplayFor(modelItem => Model[i].lastname1Afiliado)
                                </td>

                                <td class="text-right">
                                    @{if (Model[i].statusDetalleOrden != "No encontrado")
                                      {
                                        @Html.TextBoxFor(modelItem => Model[i].montoRecarga, new { @class = "form-control Monto" })
                                        <span id="field_@Model[i].idAfiliado"></span>
                                      }
                                      else
                                      {
                                        @Html.HiddenFor(modelItem => Model[i].montoRecarga)
                                        @Html.DisplayFor(modelItem => Model[i].montoRecarga, new { @class = "form-control" })
                                        @Html.TextBoxFor(modelItem => Model[i].montoRecarga, new { @class = "Monto hidden" })
                                      }
                                    }
                                </td>

                                <td>
                                    @Html.HiddenFor(modelItem => Model[i].statusDetalleOrden)
                                    @Html.DisplayFor(modelItem => Model[i].statusDetalleOrden)
                                </td>

                            </tr>                 
                        }
                    </tbody>

                </table>

                <div class="editor-label col-md-6 control-label">
                    Total Recargas :
                </div>

                <div class="editor-field col-md-4">
                    <input type="text" id="TotalRecargas" name="TotalRecargas" value="" maxlength="10" class="form-control" readonly="true">
                </div>

                <div class="editor-label col-md-6 control-label">
                    Monto Total Recargas :
                </div>

                <div class="editor-field col-md-4">
                    <input type="text" id="MontoTotalRecargas" name="MontoTotalRecargas" value="" maxlength="10" class="form-control" readonly="true">
                </div>

                <div class="editor-label col-md-4 control-label">
                    <br />
                </div>
                <div class="editor-field col-md-8">
                    <br />
                </div>

                <!-- SECCION PARA botones de operaciones -->

                <div class="col-md-12 col-tabla-btn">
                    <div class="pull-right">
                        <input type="submit" class="btn btn-success btn-md" value="Crear Orden" />
                        @*<a href="@Url.Action("FilterReviewBeneficiarios", "ClientePrepago", new { id = Model.First().idCliente })" class="btn btn-success btn-sm" > Filtrar Beneficiarios</a>*@
                        <a href="@Url.Action("FilterReview", "OrdenRecargaPrepago")" class="btn btn-danger btn-md">Regresar</a>
                    </div>
                </div>

            </form>

        </div>
        <!-- SECCION PARA botones de operaciones -->

    </div>
    <!-- panel-body -->

</div>
<!-- panel -->

@*<script src="~/Scripts/jquery-2.1.3.min.js"></script>*@
<script>
    $(document).ready(function () {
        ValidarMontos()
    });

    //var Myinterval = setInterval(function () {
    //    ValidarMontos()
    //}, 500);

    $(".Monto").on("input", function () {
        //alert("Change to " + this.value);
        ValidarMontos();
    });

    function ValidarMontos() {
        var MontoTotalRecargas = parseFloat("0");
        var TotalRecargas = 0;
        var resultado = true;
        $("#detalleOrden tbody tr").each(function (index) {
            var RegExPattern = /^\d+(\.\d{1,2})?$/;
            var idrow = $(this).data("row-key");
            var temp;
            var campo3 = 0;
            $(this).children("td").each(function (index2) {
                switch (index2) {
                    case 2:
                        if ($(this).find('.Monto').val() != "") {
                            temp = $(this).find('.Monto').val().toString();
                            temp = temp.replace(",", ".");
                            campo3 = parseFloat(temp);
                            $(this).find('.Monto').val(temp.replace(".", ","));
                        }
                        break;
                    case 3:
                        if ($.trim($(this).text()) != "No encontrado") {
                            if (campo3 != parseFloat("0")) {
                                $(this).text("Incluido");
                                LimpiarSpanMessage('field_' + idrow);
                                if (RegExPattern.test(campo3) == false) {
                                    spanMessage('field_' + idrow, '* Monto invalido');
                                    resultado = false;
                                }
                                //PARA VERIFICAR PARAMETROS ESTABLECIDOS - UNA VEZ SE DEFINA EL ESQUEMA
                                //else if (campo3 > parseFloat("5000")) {
                                //    spanMessage('field_' + idrow, '* El monto excede el valor máximo permitido (5000)');
                                //    resultado = false;
                                //}
                                TotalRecargas = TotalRecargas + 1;
                                MontoTotalRecargas = MontoTotalRecargas + campo3;
                            } else {
                                $(this).text("");
                                spanMessage('field_' + idrow, '* No incluye recarga');
                            }
                        }
                        break;
                }
            });
            document.getElementById('TotalRecargas').value = TotalRecargas;
            document.getElementById('MontoTotalRecargas').value = MontoTotalRecargas.toFixed(2).toString().replace(".", ",");
        });
        return resultado;
    }

    function spanMessage(idelemento, mensaje) {
        var span = document.getElementById(idelemento);
        while (span.firstChild) {
            span.removeChild(span.firstChild);
        }
        span.appendChild(document.createTextNode(mensaje));
    }

    function LimpiarSpanMessage(idelemento) {
        var span = document.getElementById(idelemento);
        while (span.firstChild) {
            span.removeChild(span.firstChild);
        }
    }

    function verificarforma() {
        if (!ValidarMontos()) {
            alert("Hay campos invalidos, verifique.");
            return false;
        }
        if (document.getElementById('MontoTotalRecargas').value.toString() == "0,00") {
            alert("Debe incluir al menos un benficiario de recarga.");
            return false;
        }
        return true;
    }
</script>


